name: Test JVMs and publish JMH results

on:
  push:
    branches:
      - main
      - 7.x
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

jobs:
  testjdks:
    name: Test Java ${{ matrix.jdk }} ${{ matrix.jvm_version }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        # We should test the latest LTS in use by Minecraft
        # and additionally, the latest Java in general.
        jvm_version: [ 21, 23 ]
        jdk: [ Temurin, Graal_VM ]
        include:
          - jdk: IBM
            jvm_version: 21 # IBM only has 21
          - jdk: Microsoft
            jvm_version: 21 # MS OpenJDK only has LTS versions (21)
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-disabled: true
          add-job-summary: never
      - name: Run Tests
        run: ./gradlew check
      - uses: actions/upload-artifact@v4
        name: Upload Test Results
        if: always()
        with:
          name: test_${{ matrix.jdk }}-${{ matrix.jvm_version }}
          path: "**/build/reports/tests/**/*"
      - name: Run JMH with Gradle Wrapper
        run: ./gradlew :loader:jmh -PjmhVendor=${{ matrix.jdk }} -PjmhVersion=${{ matrix.jvm_version }}
      - uses: actions/upload-artifact@v4
        name: Upload JMH Results
        with:
          name: jmh_${{ matrix.jdk }}-${{ matrix.jvm_version }}
          path: loader/build/reports/jmh/**/*

  upload_results:
    name: Collect and Upload JMH results
    needs: [testjdks]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Setup Groovy
        uses: wtfjoke/setup-groovy@v1
        with:
          groovy-version: '4.x'
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Downloads results
        uses: actions/download-artifact@v4
        id: download
        with:
          path: jmh_results
      - name: Collect results
        run: groovy .github/workflows/collect_jmh_results.groovy
      - name: Upload Final Results
        run: cat jmh_results.md >> $GITHUB_STEP_SUMMARY
